@model Tuple<EMS.Models.Presenter, List<EMS.Models.PresenterSector>, List<EMS.Models.PresenterTimeSlot>>

@{
    ViewData["Title"] = "Presenter Details";
}

<div class="container">


    <div>
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <h1>Presenter Details</h1>
            <div>
                <a asp-action="Edit" class="btn btn-primary" asp-route-id="@Model.Item1?.Id">Edit Presenter Info</a> |
                <a asp-action="Index" class="btn btn-outline-primary">Back to List</a>
            </div>
        </div>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Item1.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Item1.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Item1.Mobile)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Item1.Mobile)
            </dd>
        </dl>
    </div>
<div class="d-flex justify-content-between align-items-center gap-3 flex-wrap">
        <h4>Presenter Sectors</h4>
        <a asp-controller="PresenterSector" class="btn btn-outline-primary" asp-action="Create">Add New Sector</a>
</div>

    <hr />

    <div class="d-flex justify-content-evenly align-items-start flex-wrap gap-3">
        @foreach (var item in Model.Item2)
        {
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <a asp-controller="PresenterSector" class="text-decoration-none " asp-action="Details" asp-route-id="@item.Id" class="card-title"> Sector:- @Html.DisplayFor(modelItem => item.Name)</a>
                </div>
                @foreach (var itemItem in Model.Item3)
                {
                    @if (itemItem.PresenterSectorId == item.Id)
                    {
                        <div class="card" style="width: 18rem;">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center">
                                    <p> Start Date </p>
                                    <p>@Html.DisplayFor(modelItem => itemItem.StartTime)</p>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <p> End Date </p>
                                    <span>@Html.DisplayFor(modelItem => itemItem.EndTime)</span>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <p> Occupied </p>
                                    <span>@Html.DisplayFor(modelItem => itemItem.Occupied)</span>
                                </div>
                                <div class="d-flex justify-content-evenly align-items-center flex-wrap gap-3">
                               
                                    <a asp-controller="PresenterTimeSlot" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary w-100">Edit</a>
                                    <a asp-controller="PresenterTimeSlot" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger w-100">Delete</a>
                                </div>
                            </div>
                        </div>
                    }

                }
                <a class="btn btn-outline-success" asp-area="" asp-controller="PresenterTimeSlot" asp-action="Create">Add Time Slot</a>

            </div>
        }
    </div>
</div>