@model EMS.Models.ConferenceRoom

@{
    ViewData["Title"] = "Add Room";
}

<h1>Create</h1>

<h4>ConferenceRoom</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="createForm" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="number" class="control-label"></label>
                <input id="numberInput" asp-for="number" class="form-control" />
                <span asp-validation-for="number" class="text-danger"></span>
            </div>
            @foreach (var i in ViewBag.RoomNumber)
            {
                <p>@i.number</p>
            }
            <div class="form-group">
                <label asp-for="HotelId" class="control-label"></label>
                <select asp-for="HotelId" class="form-control" asp-items="ViewBag.HotelId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            $('#createForm').on('submit', function (e) {
                var number = $('#numberInput').val();
                var roomNumbers = @Html.Raw(Json.Serialize(ViewBag.RoomNumber));

                for (var i = 0; i < roomNumbers.length; i++) {
                    if (number === roomNumbers[i].number) {
                       // e.preventDefault(); // Prevent form submission
                        $('#numberInput').addClass('is-invalid');
                        $('#numberInput').after('<div class="invalid-feedback">Number already exists</div>');
                        return;
                    }
                }
            });
        });
    </script>
}
